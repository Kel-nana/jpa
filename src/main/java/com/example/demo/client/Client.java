package com.example.demo.client;

import jakarta.persistence.*;
import lombok.*;

import java.time.LocalDate;

@Entity
@Table(name = "client",
        uniqueConstraints = {
                @UniqueConstraint(name = "client_idno_unique_constrain", columnNames = "client_idno"),
                @UniqueConstraint(name = "email_unique_constrain", columnNames = "email")
        })

// lombook : https://medium.com/devdomain/using-lombok-in-spring-boot-simplifying-your-code-c38057894cb8

@Getter
@Setter
@ToString
@NoArgsConstructor
@AllArgsConstructor
public class Client {
    @Id
    @SequenceGenerator(
            name = "client_sequence",
            sequenceName = "client_sequence",
            allocationSize = 1
    )

    @GeneratedValue (
           strategy = GenerationType.SEQUENCE,
            generator = "client_sequence"
    )

    @Column( name = "id", updatable = false)
    private Long id;

    @Column( name = "fname", nullable = false)
    private String fname;

    @Column( name = "onames", nullable = false)
    private String onames;

    @Column( name = "client_idno", nullable = false)
    private  Long client_idno;

    private LocalDate dob;

    @Column( name = "email", nullable = false)
    private String email;

////    autogenerated id
    public Client(String fname, String onames, Long client_idno, LocalDate dob, String email) {
        this.fname = fname;
        this.onames = onames;
        this.client_idno = client_idno;
        this.dob = dob;
        this.email = email;
    }

}
